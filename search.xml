<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023-10-26_空间复杂度等_作业</title>
      <link href="/2023/10/28/2023-10-26-kong-jian-fu-za-du-deng-zuo-ye/"/>
      <url>/2023/10/28/2023-10-26-kong-jian-fu-za-du-deng-zuo-ye/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1.分析以下函数的时间复杂度</p></blockquote><pre class="line-numbers language-C" data-language="C"><code class="language-C">void fun(int n){    int i = 1;    while (i &lt;= n)    i = i*2;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>2.分析以下函数的时间复杂度</p></blockquote><pre class="line-numbers language-C" data-language="C"><code class="language-C">int f (unsigned int n){    if (n == 0 || n == 1)        return 1;    else        return n * f(n - 1);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>3.给定一个整数sum，从有N个有序元素的数组中寻找元素a，b，使得a+b的结果最接近sum，最快的平均时间复杂度是（   ）</p><blockquote><p>A.O(n)<br>B.O(n^2)<br>C.O(nlogn)<br>D.O(logn)</p></blockquote></blockquote><blockquote><p>4.分析以下函数的空间复杂度</p></blockquote><pre class="line-numbers language-C" data-language="C"><code class="language-C">int** fun(int n) {    int ** s = (int **)malloc(n * sizeof(int *));    while(n--)      s[n] = (int *)malloc(n * sizeof(int));    return s;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>5.如果一个函数的内部中只定义了一个二维数组a[3][6]，请问这个函数的空间复杂度为（   ）</p><blockquote><p>A.O(n)<br>B.O(n^2)<br>C.O( 1 )<br>D.O(m*n)</p></blockquote></blockquote><blockquote><p>6.设某算法的递推公式是T(n)=T(n-1)+n，T(0)=1，则求该算法中第n项的时间复杂度为（   ）</p><blockquote><p>A.O(n)<br>B.O(n^2)<br>C.O(nlogn)<br>D.O(logn)</p></blockquote></blockquote><blockquote><p>7.原地移除数组中所有的元素val，要求时间复杂度为O(N)，空间复杂度为O(1)  <strong>编程题</strong></p></blockquote><blockquote><p>8.删除排序数组中的重复项  <strong>编程题</strong></p></blockquote><blockquote><p>9.合并两个有序数组  <strong>编程题</strong></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 初阶 </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>101数据结构初阶</title>
      <link href="/2023/10/23/101-shu-ju-jie-gou-chu-jie/"/>
      <url>/2023/10/23/101-shu-ju-jie-gou-chu-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构前言"><a href="#数据结构前言" class="headerlink" title="数据结构前言"></a>数据结构前言</h1><p>1</p><h2 id="什么是数据结构"><a href="#什么是数据结构" class="headerlink" title="什么是数据结构"></a>什么是数据结构</h2><p>11</p><h2 id="什么是算法"><a href="#什么是算法" class="headerlink" title="什么是算法"></a>什么是算法</h2><p>111</p><h2 id="数据结构和算法的重要性"><a href="#数据结构和算法的重要性" class="headerlink" title="数据结构和算法的重要性"></a>数据结构和算法的重要性</h2><p>1111</p><h2 id="如何学好数据结构和算法"><a href="#如何学好数据结构和算法" class="headerlink" title="如何学好数据结构和算法"></a>如何学好数据结构和算法</h2><p>11111</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 初阶 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
